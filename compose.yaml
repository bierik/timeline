services:
  frontend:
    build:
      context: frontend
      dockerfile: docker/Dockerfile
      target: dev
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - 5000:3000
    depends_on:
      - backend
      - create-bucket

  backend:
    build:
      context: backend
      dockerfile: docker/Dockerfile
      target: dev
    volumes:
      - ./backend:/app
    ports:
      - 5002:8000
    depends_on:
      - db
    stdin_open: true
    tty: true

  db:
    image: postgres:16.3-alpine3.19
    ports:
      - 5001:5432
    volumes:
      - ./var/data/db:/var/lib/postgresql/data
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres

  minio:
    image: minio/minio:RELEASE.2024-11-07T00-52-20Z
    volumes:
      - ./var/data/media:/data
    ports:
      - "5003:9001"
    environment:
      MINIO_ROOT_USER: admin
      MINIO_ROOT_PASSWORD: password
    command: server --console-address :9001 /data
    healthcheck:
      test: timeout 5s bash -c ':> /dev/tcp/127.0.0.1/9000' || exit 1
      interval: 5s
      retries: 3
      start_period: 5s
      timeout: 5s

  create-bucket:
    image: minio/mc
    depends_on:
      minio:
        condition: service_healthy
    entrypoint: >
      /bin/sh -c "
      /usr/bin/mc alias set minio http://minio:9000 admin password;
      /usr/bin/mc mb minio/media;
      /usr/bin/mc anonymous set public minio/media;
      exit 0;
      "
